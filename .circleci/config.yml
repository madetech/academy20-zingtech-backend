version: 2.1

orbs:
  heroku: circleci/heroku@1.2.3 # Invoke the Heroku orb
  docker: circleci/docker@1.5.0
  deploy-to-heroku: betterdoc/deploy-to-heroku@4.2.0

workflows:
  heroku_deploy:
    jobs:
      - test
      - deploy:
          requires:
            - test
jobs:
  test:
    machine:
      image: ubuntu-2004:202010-01
    steps:
      - checkout
      - run:
          name: Start API + database containers
          environment:
            PORT: 8080
          command: |
            cd academy20-zingtech-backend
            docker-compose up -d
            docker-compose exec api dotnet dotnet-ef database update
      - run:
          name: Set up Newman for testing
          command: |
            npm install
      - run:
          name: Waiting for the service-under-test to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 8080 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for API && exit 1
      - run:
          name: Waiting for the database to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgress && exit 1
      - run:
          name: Execute integration tests with Newman
          command: npx newman run backend-tests/integration/*.postman_collection.json
      - run:
          name: Bring down API and database containers
          command: docker-compose down
      - run: 
          name: Execute unit tests with NUnit
          command: |
            docker-compose exec api dotnet test
  deploy:
    machine: true
    steps:
      - checkout
      - run:
          name: Build and push Docker image to Heroku
          command: |
            sudo curl https://cli-assets.heroku.com/install.sh | sh
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:login 
            cd academy20-zingtech-backend
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:push -a zingtech-backend web 
            HEROKU_API_KEY=${HEROKU_API_KEY} heroku container:release -a zingtech-backend web